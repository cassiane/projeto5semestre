-- MySQL Script generated by MySQL Workbench
-- Qua 28 Set 2016 17:37:46 BRT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema witc
-- -----------------------------------------------------

USE `witc` ;

-- -----------------------------------------------------
-- Table `witc`.`ConvidadoPerfil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `witc`.`ConvidadoPerfil` (
  `idPerfil` INT UNSIGNED NOT NULL,
  `idPerfilConvidado` INT UNSIGNED NOT NULL,
  `idLivro` INT UNSIGNED NOT NULL,
  `dataSolicitacao` DATETIME NOT NULL,
  UNIQUE KEY `un_ConvidadoPerfil_1` (`idPerfilConvidado`, `idLivro`),
  CONSTRAINT `fk_ConvidadoPerfil_1`
    FOREIGN KEY (`idPerfil`)
    REFERENCES `witc`.`Perfil` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ConvidadoPerfil_2`
    FOREIGN KEY (`idPerfilConvidado`)
    REFERENCES `witc`.`Perfil` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ConvidadoPerfil_3`
    FOREIGN KEY (`idLivro`)
    REFERENCES `witc`.`Livro` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Procedure `proc_edicao` realizar a pesquisa de amigos para sugerir
-- -----------------------------------------------------
DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_edicao`(IN usuario INT, IN livro INT)
BEGIN
START TRANSACTION;
(SELECT a.* FROM witc.Perfil a WHERE a.idUsuario IN 
	(SELECT id FROM witc.Usuario b WHERE b.id IN 
		(SELECT c.idUsuario FROM witc.Usuario_tem_Amigo c WHERE c.idAmigo = usuario AND c.dataAceitacao IS NOT NULL AND c.amigoStatus = TRUE) 
		OR b.id IN 
		(SELECT d.idAmigo FROM witc.Usuario_tem_Amigo d WHERE d.idUsuario = usuario AND d.dataAceitacao IS NOT NULL AND d.amigoStatus = TRUE)) 
	AND a.id NOT IN 
		(SELECT e.idPerfil FROM witc.HistoricoLivros e WHERE e.idLivro = livro) 
	AND a.id NOT IN 
		(SELECT f.idPerfilConvidado FROM witc.ConvidadoPerfil f WHERE f.idLivro = livro));
COMMIT;
END$$
DELIMITER ;

ALTER TABLE `witc`.`HistoricoLivros` 
ADD UNIQUE INDEX `ui_HistoricoLivro_PerfilLivro` (`idPerfil` ASC, `idLivro` ASC);

-- -----------------------------------------------------
-- Procedure `proc_historico_convite` realizar a pesquisa de convites existente e grava na solicitação
-- -----------------------------------------------------
DELIMITER $$
USE `witc`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_historico_convite`(IN perfil INT, IN livro INT)
BEGIN
START TRANSACTION;
INSERT INTO witc.HistoricoLivros (idPerfil, idTipoStatus, idLivro, dataInicio)
 SELECT a.idPerfilConvidado, b.id, a.idLivro, a.dataSolicitacao
  FROM witc.ConvidadoPerfil a INNER JOIN witc.TipoStatus b
  WHERE a.idPerfilConvidado = perfil AND a.idLivro = livro AND b.id = 1;
DELETE FROM witc.ConvidadoPerfil WHERE idPerfilConvidado = perfil AND idLivro = livro;
COMMIT;
END$$

DELIMITER ;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
